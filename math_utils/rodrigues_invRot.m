% Define the modified invRotate function to handle 3x3xN input
function vector_collection = rodrigues_invRot(director_collection)
    % Calculated rate of change using Rodrigues' formula
    %
    % Parameters
    % ----------
    % director_collection : The collection of frames/directors at every element,
    %                       a 3D matrix of size (dim, dim, n)
    %
    % Returns
    % -------
    % vector_collection : The collection of axes around which the body rotates
    %                     a matrix of size (dim, n-1)
    %
    % Note
    % ----
    % TODO: Benchmark missing

    blocksize = size(director_collection, 3) - 1;
    vector_collection = zeros(3, blocksize);

    for k = 1:blocksize
        % Q_{i+1}Q^T_{i} collection
        vector_collection(1, k) = (director_collection(3, 1, k + 1) * director_collection(2, 1, k) + ...
                                   director_collection(3, 2, k + 1) * director_collection(2, 2, k) + ...
                                   director_collection(3, 3, k + 1) * director_collection(2, 3, k)) - ...
                                  (director_collection(2, 1, k + 1) * director_collection(3, 1, k) + ...
                                   director_collection(2, 2, k + 1) * director_collection(3, 2, k) + ...
                                   director_collection(2, 3, k + 1) * director_collection(3, 3, k));

        vector_collection(2, k) = (director_collection(1, 1, k + 1) * director_collection(3, 1, k) + ...
                                   director_collection(1, 2, k + 1) * director_collection(3, 2, k) + ...
                                   director_collection(1, 3, k + 1) * director_collection(3, 3, k)) - ...
                                  (director_collection(3, 1, k + 1) * director_collection(1, 1, k) + ...
                                   director_collection(3, 2, k + 1) * director_collection(1, 2, k) + ...
                                   director_collection(3, 3, k + 1) * director_collection(1, 3, k));

        vector_collection(3, k) = (director_collection(2, 1, k + 1) * director_collection(1, 1, k) + ...
                                   director_collection(2, 2, k + 1) * director_collection(1, 2, k) + ...
                                   director_collection(2, 3, k + 1) * director_collection(1, 3, k)) - ...
                                  (director_collection(1, 1, k + 1) * director_collection(2, 1, k) + ...
                                   director_collection(1, 2, k + 1) * director_collection(2, 2, k) + ...
                                   director_collection(1, 3, k + 1) * director_collection(2, 3, k));

        trace = director_collection(1, 1, k + 1) * director_collection(1, 1, k) + ...
                director_collection(1, 2, k + 1) * director_collection(1, 2, k) + ...
                director_collection(1, 3, k + 1) * director_collection(1, 3, k) + ...
                director_collection(2, 1, k + 1) * director_collection(2, 1, k) + ...
                director_collection(2, 2, k + 1) * director_collection(2, 2, k) + ...
                director_collection(2, 3, k + 1) * director_collection(2, 3, k) + ...
                director_collection(3, 1, k + 1) * director_collection(3, 1, k) + ...
                director_collection(3, 2, k + 1) * director_collection(3, 2, k) + ...
                director_collection(3, 3, k + 1) * director_collection(3, 3, k);

        % TODO: HARDCODED bugfix has to be changed. Remove 1e-14 tolerance
        theta = acos(0.5 * trace - 0.5 - 1e-10);

        vector_collection(:, k) = -0.5 * theta / sin(theta + 1e-14) * vector_collection(:, k);
    end
end
